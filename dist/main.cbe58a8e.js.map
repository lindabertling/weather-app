{"version":3,"sources":["src/main.js"],"names":["weatherWrapper","document","querySelector","weatherIcon","temperature","feelsLike","precipitation","wind","precipitationForecastWrapper","precipitationForecast","positionSuccess","_ref","coords","getWeather","latitude","longitude","then","res","textContent","setWeatherIcon","weatherIconCode","classList","remove","catch","e","console","log","positionFailure","alert","axios","get","params","_ref2","data","hourly","temperature_2m","apparent_temperature","windspeed_10m","precipitation_probability","weathercode","navigator","geolocation","getCurrentPosition"],"mappings":";AACA,IAAMA,EAAiBC,SAASC,cAAc,oBACxCC,EAAcF,SAASC,cAAc,iBACrCE,EAAcH,SAASC,cAAc,gBACrCG,EAAYJ,SAASC,cAAc,eACnCI,EAAgBL,SAASC,cAAc,kBACvCK,EAAON,SAASC,cAAc,SAC9BM,EAA+BP,SAASC,cAC5C,mCAEIO,EAAwBR,SAASC,cAAc,2BAIrD,SAASQ,EAAeC,GAAa,IAAVC,EAAMD,EAANC,OACzBC,EAAWD,EAAOE,SAAUF,EAAOG,WAChCC,KAAK,SAACC,GACLd,EAAYe,YAAcC,EAAeF,EAAIG,iBAC7ChB,EAAYc,YAAcD,EAAIb,YAC9BC,EAAUa,YAAcD,EAAIZ,UAC5BC,EAAcY,YAAcD,EAAIX,cAChCC,EAAKW,YAAcD,EAAIV,KACvBE,EAAsBS,YAAcD,EAAIR,sBACxCT,EAAeqB,UAAUC,OAAO,WAChCd,EAA6Ba,UAAUC,OAAO,aAE/CC,MAAM,SAACC,GAAC,OAAKC,QAAQC,IAAI,UAAYF,KAG1C,SAASG,IACPC,MACE,4GAIJ,SAASf,EAAWC,EAAUC,GAC5B,OAAOc,MACJC,IACC,sJACA,CAAEC,OAAQ,CAAEjB,SAAAA,EAAUC,UAAAA,KAEvBC,KAAK,SAAAgB,GAAc,IAAXC,EAAID,EAAJC,KAOP,MAAO,CACL7B,YAPkB6B,EAAKC,OAAOC,eAAe,GAQ7C9B,UAPoB4B,EAAKC,OAAOE,qBAAqB,GAQrD9B,cAPoB2B,EAAKC,OAAO5B,cAAc,GAQ9CC,KAPW0B,EAAKC,OAAOG,cAAc,GAQrC5B,sBAP4BwB,EAAKC,OAAOI,0BAA0B,GAQlElB,gBAPsBa,EAAKC,OAAOK,YAAY,MAnCtDC,UAAUC,YAAYC,mBAAmBhC,EAAiBiB,GA+C1D,IAAMR,EAAiB,SAAChB,GACtB,OAAQA,GACN,KAAK,EACH,MAAO,KAET,KAAK,EACH,MAAO,MAET,KAAK,EACH,MAAO,KAET,KAAK,EACH,MAAO,KAET,KAAK,GACL,KAAK,GACH,MAAO,MAET,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACH,MAAO,MAET,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACH,MAAO,QAET,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACH,MAAO,MAET,KAAK,GACL,KAAK,GACL,KAAK,GACH,MAAO","file":"main.cbe58a8e.js","sourceRoot":"..","sourcesContent":["// selectors\nconst weatherWrapper = document.querySelector(\".weather-wrapper\");\nconst weatherIcon = document.querySelector(\".weather-icon\");\nconst temperature = document.querySelector(\".temperature\");\nconst feelsLike = document.querySelector(\".feels-like\");\nconst precipitation = document.querySelector(\".precipitation\");\nconst wind = document.querySelector(\".wind\");\nconst precipitationForecastWrapper = document.querySelector(\n  \".precipitation-forecast-wrapper\"\n);\nconst precipitationForecast = document.querySelector(\".precipitation-forecast\");\n\nnavigator.geolocation.getCurrentPosition(positionSuccess, positionFailure);\n\nfunction positionSuccess({ coords }) {\n  getWeather(coords.latitude, coords.longitude)\n    .then((res) => {\n      weatherIcon.textContent = setWeatherIcon(res.weatherIconCode);\n      temperature.textContent = res.temperature;\n      feelsLike.textContent = res.feelsLike;\n      precipitation.textContent = res.precipitation;\n      wind.textContent = res.wind;\n      precipitationForecast.textContent = res.precipitationForecast;\n      weatherWrapper.classList.remove(\"blurred\");\n      precipitationForecastWrapper.classList.remove(\"blurred\");\n    })\n    .catch((e) => console.log(\"Error: \" + e));\n}\n\nfunction positionFailure() {\n  alert(\n    \"An error occured when trying to get your location. Please check your location settings and try again. :)\"\n  );\n}\n\nfunction getWeather(latitude, longitude) {\n  return axios\n    .get(\n      \"https://api.open-meteo.com/v1/forecast?hourly=temperature_2m,apparent_temperature,precipitation_probability,precipitation,weathercode,windspeed_10m\",\n      { params: { latitude, longitude } }\n    )\n    .then(({ data }) => {\n      const temperature = data.hourly.temperature_2m[0];\n      const feelsLikeTemp = data.hourly.apparent_temperature[0];\n      const precipitation = data.hourly.precipitation[0];\n      const wind = data.hourly.windspeed_10m[0];\n      const precipitationForecast = data.hourly.precipitation_probability[0];\n      const weatherIconCode = data.hourly.weathercode[0];\n      return {\n        temperature: temperature,\n        feelsLike: feelsLikeTemp,\n        precipitation: precipitation,\n        wind: wind,\n        precipitationForecast: precipitationForecast,\n        weatherIconCode: weatherIconCode,\n      };\n    });\n}\n\nconst setWeatherIcon = (weatherIcon) => {\n  switch (weatherIcon) {\n    case 0:\n      return \"☀️\";\n      break;\n    case 1:\n      return \"🌤️\";\n      break;\n    case 2:\n      return \"⛅️\";\n      break;\n    case 3:\n      return \"☁️\";\n      break;\n    case 45:\n    case 48:\n      return \"🌫️\";\n      break;\n    case 51:\n    case 53:\n    case 55:\n    case 61:\n    case 63:\n    case 65:\n    case 80:\n    case 81:\n    case 82:\n      return \"🌧️\";\n      break;\n    case 56:\n    case 57:\n    case 66:\n    case 67:\n    case 85:\n    case 86:\n      return \"❄️🌧️\";\n      break;\n    case 71:\n    case 73:\n    case 75:\n    case 77:\n      return \"🌧️\";\n      break;\n    case 95:\n    case 96:\n    case 99:\n      return \"⛈️\";\n      break;\n  }\n};\n"]}